// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'domain/entity/apps.dart';
import 'domain/entity/home_apps.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 1716991693534659379),
      name: 'App',
      lastPropertyId: const obx_int.IdUid(4, 5696634310084056140),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4854646101630480210),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8238723067582202674),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5185062392806053666),
            name: 'packageName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5696634310084056140),
            name: 'icon',
            type: 23,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 415372610270974347),
      name: 'HomeApp',
      lastPropertyId: const obx_int.IdUid(3, 6890827169418378667),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4516788545263148770),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6796041104146243208),
            name: 'appId',
            type: 11,
            flags: 552,
            indexId: const obx_int.IdUid(1, 3499812411597887625),
            relationTarget: 'App'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6890827169418378667),
            name: 'position',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 415372610270974347),
      lastIndexId: const obx_int.IdUid(1, 3499812411597887625),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    App: obx_int.EntityDefinition<App>(
        model: _entities[0],
        toOneRelations: (App object) => [],
        toManyRelations: (App object) => {},
        getId: (App object) => object.id,
        setId: (App object, int id) {
          object.id = id;
        },
        objectToFB: (App object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final packageNameOffset = fbb.writeString(object.packageName);
          final iconOffset =
              object.icon == null ? null : fbb.writeListInt8(object.icon!);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleOffset);
          fbb.addOffset(2, packageNameOffset);
          fbb.addOffset(3, iconOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final packageNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final iconParam = const fb.Uint8ListReader(lazy: false)
              .vTableGetNullable(buffer, rootOffset, 10) as Uint8List?;
          final object = App(
              title: titleParam, packageName: packageNameParam, icon: iconParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    HomeApp: obx_int.EntityDefinition<HomeApp>(
        model: _entities[1],
        toOneRelations: (HomeApp object) => [object.app],
        toManyRelations: (HomeApp object) => {},
        getId: (HomeApp object) => object.id,
        setId: (HomeApp object, int id) {
          object.id = id;
        },
        objectToFB: (HomeApp object, fb.Builder fbb) {
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.app.targetId);
          fbb.addInt64(2, object.position);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final positionParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object = HomeApp(position: positionParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.app.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          object.app.attach(store);
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [App] entity fields to define ObjectBox queries.
class App_ {
  /// See [App.id].
  static final id = obx.QueryIntegerProperty<App>(_entities[0].properties[0]);

  /// See [App.title].
  static final title = obx.QueryStringProperty<App>(_entities[0].properties[1]);

  /// See [App.packageName].
  static final packageName =
      obx.QueryStringProperty<App>(_entities[0].properties[2]);

  /// See [App.icon].
  static final icon =
      obx.QueryByteVectorProperty<App>(_entities[0].properties[3]);
}

/// [HomeApp] entity fields to define ObjectBox queries.
class HomeApp_ {
  /// See [HomeApp.id].
  static final id =
      obx.QueryIntegerProperty<HomeApp>(_entities[1].properties[0]);

  /// See [HomeApp.app].
  static final app =
      obx.QueryRelationToOne<HomeApp, App>(_entities[1].properties[1]);

  /// See [HomeApp.position].
  static final position =
      obx.QueryIntegerProperty<HomeApp>(_entities[1].properties[2]);
}
